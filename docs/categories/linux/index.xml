<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>linux on A collection of random ideas so I don&#39;t have to google again</title>
    <link>https://rushichaudhari.github.io/categories/linux/</link>
    <description>Recent content in linux on A collection of random ideas so I don&#39;t have to google again</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 02 Jul 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://rushichaudhari.github.io/categories/linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>SWMO Generate Cheatsheet From Config</title>
      <link>https://rushichaudhari.github.io/posts/2021-07-02-swmo-generate-cheatsheet-from-config/</link>
      <pubDate>Sat, 02 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://rushichaudhari.github.io/posts/2021-07-02-swmo-generate-cheatsheet-from-config/</guid>
      <description>generate_keys_cheatsheet.py # Will generate a keys.txt, go to https://carbon.now.sh and generate a carbon.png from keys.txt import os import sys import re import pandas as pd from rich import print from tabulate import tabulate # FIXME: there must be a more pythonesque way to do this! def get_category(conf, name): for cat in conf: if cat[&amp;#34;category-name&amp;#34;] == name: return cat cat={ } cat[&amp;#34;category-name&amp;#34;] = name cat[&amp;#34;bindings&amp;#34;] = [ ] conf.append(cat) return cat token_pattern = re.</description>
    </item>
    
    <item>
      <title>T490 Fan Speed Configuration With Thinkfan</title>
      <link>https://rushichaudhari.github.io/posts/2022-05-24-t490-fan-speed-configuration-with-thinkfan/</link>
      <pubDate>Tue, 24 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://rushichaudhari.github.io/posts/2022-05-24-t490-fan-speed-configuration-with-thinkfan/</guid>
      <description>I love Thinkpads. They are robust and durable. And no need to mention about their world class keyboards!
It works like a charm, but we need to configure it a bit for silence. Let&amp;rsquo;s start!
1. Install the necessary package sudo apt install thinkfan 2. Create the configuration file After installing the package we need to create a config file in the following directory: /etc/thinkfan.conf
This file requires three main items:</description>
    </item>
    
    <item>
      <title>Wayvnc Arch Linux (Pinephone)</title>
      <link>https://rushichaudhari.github.io/posts/2022-05-19-wayvnc-arch-linux/</link>
      <pubDate>Thu, 19 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://rushichaudhari.github.io/posts/2022-05-19-wayvnc-arch-linux/</guid>
      <description>Traditionally we have been using Xorg or X11 as the display server on linux. Wayland is a similar display server which aims to be a modern and more optimized. I&amp;rsquo;m not much used to wayland and this is a guide for using wayvnc, a vnc server for wayland. Any vnc client like tigervnc/ realvncviewer can be used.
# Install wayvnc sudo pacman -S wayvnc Create a config with the authentication info and load it using the &amp;ndash;config command line option or place it at the default location $HOME/.</description>
    </item>
    
    <item>
      <title>My Pinephone Setup</title>
      <link>https://rushichaudhari.github.io/posts/2022-04-13-my-pinephone-setup/</link>
      <pubDate>Thu, 14 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://rushichaudhari.github.io/posts/2022-04-13-my-pinephone-setup/</guid>
      <description>The Pinephone[1] is my first Linux smartphone. I&amp;rsquo;ve been waiting for this since 2018. I feel the more android is advancing the more it is getting IOS&amp;rsquo;ish. Android was not meant to be this way. The reason it became popular early was it being opensource, and developer friendly. That era allowed bootloader unlocking, developing custom and newer kernels, tweaking the UI. Newer android has become too much bloatish and restrictive. For instance if we see miracast, android dropped miracast support for non samsung devices after android 8.</description>
    </item>
    
    <item>
      <title>Cool Stuff to Do With SSH</title>
      <link>https://rushichaudhari.github.io/posts/2022-02-05-cool-stuff-to-do-with-ssh/</link>
      <pubDate>Sat, 05 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://rushichaudhari.github.io/posts/2022-02-05-cool-stuff-to-do-with-ssh/</guid>
      <description>Watch Netflix from restricted regions Use: Some Netflix shows are only available in India, Let us proxy through some Indian server to watch Netflix
# In terminal 1 # 9050 is default port for proxychains socksproxy # something@someIP should be some Indian server ssh something@someIP -D 9050 # In terminal 2 proxychains firefox # Check the IP using https://www.whatismyipaddress.com It should show the ip of the ssh server(India), Now you can watch Indian Netflix :D VNC over SSH tunnel Best alternative if Anydesk/ Teamviewer fails on linux</description>
    </item>
    
    <item>
      <title>Alexa AI for reminding important emails and reminders</title>
      <link>https://rushichaudhari.github.io/posts/2021-12-19-alexa-remind-emails/</link>
      <pubDate>Sun, 19 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://rushichaudhari.github.io/posts/2021-12-19-alexa-remind-emails/</guid>
      <description>Motivation :- It was the third time I missed reading my email and picking up shifts for my oncampus job. I did try creating labels and filtering them but that didn&amp;rsquo;t show any progress in improvement. It&amp;rsquo;s really stressful when I get the notification that something needs a response from me right away. I had to make sure that I was not missing this next time. It is then when I decided I need to build a system to process and remind me this.</description>
    </item>
    
    <item>
      <title>Enable Secure Boot on Dualboot</title>
      <link>https://rushichaudhari.github.io/posts/2021-11-01-enable-secure-boot-on-dualboot/</link>
      <pubDate>Mon, 01 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://rushichaudhari.github.io/posts/2021-11-01-enable-secure-boot-on-dualboot/</guid>
      <description>Repo to https://wiki.archlinux.org/title/Unified_Extensible_Firmware_Interface/Secure_Boot#Using_a_signed_boot_loader
Tips  preloader-signed works with systemd boot If you have grub and want to move to systemd-boot refer this  </description>
    </item>
    
    <item>
      <title>Switch to Systemd From Grub</title>
      <link>https://rushichaudhari.github.io/posts/2021-11-01-switch-to-systemd-from-grub/</link>
      <pubDate>Mon, 01 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://rushichaudhari.github.io/posts/2021-11-01-switch-to-systemd-from-grub/</guid>
      <description>I have two efi partitions, p1 for windows and p4 for Arch
sudo fdisk -l
Add the efi entry in /etc/fstab
get the UUID from sudo blkid
Mount the /efi
sudo mount /efi &amp;amp;&amp;amp; ls /efi
The structure would look something like
Install ucode for my amd machine it is
sudo pacman -S amd-ucode
Reinstall linux kernel
sudo pacman -S linux linux-headers
mkinitcpio -P
Add the following in
sudo nano /efi/loader/entries/arch.</description>
    </item>
    
    <item>
      <title>Bookmark Linux Commands using Keep</title>
      <link>https://rushichaudhari.github.io/posts/2021-10-28-bookmark-linux-commands-keep/</link>
      <pubDate>Thu, 28 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://rushichaudhari.github.io/posts/2021-10-28-bookmark-linux-commands-keep/</guid>
      <description>Why keep ?  opensource can export commands from ~/.keep/commands.json  My branch now supports running commands with id https://github.com/rushic24/keep
Add command: keep new</description>
    </item>
    
    <item>
      <title>How to Change Docker Storage Location</title>
      <link>https://rushichaudhari.github.io/posts/2021-11-11-how-to-change-docker-storage-location/</link>
      <pubDate>Wed, 11 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://rushichaudhari.github.io/posts/2021-11-11-how-to-change-docker-storage-location/</guid>
      <description>You can easily change the Docker default storage location by creating the daemon.json file and pointing to another location in that file.
It happened to me several times that I didnâ€™t have enough space in my root partition to store Docker containers and I had to move the Docker default storage location to another partition. In this post, I wrote down how to do that for my readership and future myself :)</description>
    </item>
    
    <item>
      <title>A prebuilt kali-linux with GUI aka vnc in docker in 2 seconds</title>
      <link>https://rushichaudhari.github.io/posts/2020-05-14-docker-vnc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://rushichaudhari.github.io/posts/2020-05-14-docker-vnc/</guid>
      <description>This guide assumes you already know what is docker and docker, vncviewer installed on your system The docker image given at https://hub.docker.com/search?q=&amp;amp;type=image is a blank kali image with 0 tools.
Let us create a light-weight custom image with the tools needed. The following are the tools which I think are commonly used in kali you can add/remove a few from that list.
aircrack-ng crackmapexec crunch curl dirb dirbuster dnsenum dnsrecon dnsutils dos2unix enum4linux exploitdb ftp git gobuster hashcat hping3 hydra impacket-scripts john joomscan masscan metasploit-framework mimikatz nasm ncat netcat-traditional nikto nmap patator php powersploit proxychains python-pip python2 python3 recon-ng responder samba samdump2 smbclient smbmap snmp socat sqlmap sslscan theharvester vim wafw00f weevely wfuzz whois wordlists wpscan Creating Dockerfile</description>
    </item>
    
    <item>
      <title>Adding wifi connection without GUI for enterprise wifi like at universities/ offices with PEAP</title>
      <link>https://rushichaudhari.github.io/posts/2021-09-12-nmcli-enterprise-wifi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://rushichaudhari.github.io/posts/2021-09-12-nmcli-enterprise-wifi/</guid>
      <description># nmcli con add type wifi ifname wlan0 con-name CONNECTION_NAME ssid SSID # nmcli con edit id CONNECTION_NAME nmcli&amp;gt; set ipv4.method auto nmcli&amp;gt; set 802-1x.eap peap nmcli&amp;gt; set 802-1x.phase2-auth mschapv2 nmcli&amp;gt; set 802-1x.identity USERNAME nmcli&amp;gt; set 802-1x.password PASSWORD nmcli&amp;gt; set wifi-sec.key-mgmt wpa-eap nmcli&amp;gt; save nmcli&amp;gt; activate </description>
    </item>
    
    <item>
      <title>Compiling fceux on Debian 10 buster</title>
      <link>https://rushichaudhari.github.io/posts/2020-01-29-compiling-fceux-on-debian-buster/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://rushichaudhari.github.io/posts/2020-01-29-compiling-fceux-on-debian-buster/</guid>
      <description>I came across this wonderful video https://www.youtube.com/watch?v=qv6UVOQ0F44. It took me into searching for its code to implement that. And here are a few.
https://github.com/Mario-brows/Brows-Super-Mario https://github.com/lopatin96/Lua-SNES-GenNeurNetwork The main problem in them is they use BizHawk Emulator, which I was not successful in compiling for my debian OS, Its stable only for windows machines. Then I found its alternative fceux Which can handle lua scripts too!.
The following steps are what I used to compile it successfully.</description>
    </item>
    
  </channel>
</rss>
