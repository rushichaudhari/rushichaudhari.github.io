<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>linux on A collection of random ideas so I don&#39;t have to google again</title>
    <link>https://rushichaudhari.github.io/categories/linux/</link>
    <description>Recent content in linux on A collection of random ideas so I don&#39;t have to google again</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 28 Oct 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://rushichaudhari.github.io/categories/linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Bookmark Linux Commands using Keep</title>
      <link>https://rushichaudhari.github.io/posts/2021-10-28-bookmark-linux-commands-keep/</link>
      <pubDate>Thu, 28 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://rushichaudhari.github.io/posts/2021-10-28-bookmark-linux-commands-keep/</guid>
      <description>Why keep ?  opensource can export commands from ~/.keep/commands.json  My branch now supports running commands with id https://github.com/rushic24/keep
Add command: keep new</description>
    </item>
    
    <item>
      <title>A prebuilt kali-linux with GUI aka vnc in docker in 2 seconds</title>
      <link>https://rushichaudhari.github.io/posts/2020-05-14-docker-vnc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://rushichaudhari.github.io/posts/2020-05-14-docker-vnc/</guid>
      <description>This guide assumes you already know what is docker and docker, vncviewer installed on your system The docker image given at https://hub.docker.com/search?q=&amp;amp;type=image is a blank kali image with 0 tools.
Let us create a light-weight custom image with the tools needed. The following are the tools which I think are commonly used in kali you can add/remove a few from that list.
aircrack-ng crackmapexec crunch curl dirb dirbuster dnsenum dnsrecon dnsutils dos2unix enum4linux exploitdb ftp git gobuster hashcat hping3 hydra impacket-scripts john joomscan masscan metasploit-framework mimikatz nasm ncat netcat-traditional nikto nmap patator php powersploit proxychains python-pip python2 python3 recon-ng responder samba samdump2 smbclient smbmap snmp socat sqlmap sslscan theharvester vim wafw00f weevely wfuzz whois wordlists wpscan Creating Dockerfile</description>
    </item>
    
    <item>
      <title>Adding wifi connection without GUI for enterprise wifi like at universities/ offices with PEAP</title>
      <link>https://rushichaudhari.github.io/posts/2021-09-12-nmcli-enterprise-wifi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://rushichaudhari.github.io/posts/2021-09-12-nmcli-enterprise-wifi/</guid>
      <description># nmcli con add type wifi ifname wlan0 con-name CONNECTION_NAME ssid SSID # nmcli con edit id CONNECTION_NAME nmcli&amp;gt; set ipv4.method auto nmcli&amp;gt; set 802-1x.eap peap nmcli&amp;gt; set 802-1x.phase2-auth mschapv2 nmcli&amp;gt; set 802-1x.identity USERNAME nmcli&amp;gt; set 802-1x.password PASSWORD nmcli&amp;gt; set wifi-sec.key-mgmt wpa-eap nmcli&amp;gt; save nmcli&amp;gt; activate </description>
    </item>
    
    <item>
      <title>Compiling fceux on Debian 10 buster</title>
      <link>https://rushichaudhari.github.io/posts/2020-01-29-compiling-fceux-on-debian-buster/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://rushichaudhari.github.io/posts/2020-01-29-compiling-fceux-on-debian-buster/</guid>
      <description>I came across this wonderful video https://www.youtube.com/watch?v=qv6UVOQ0F44. It took me into searching for its code to implement that. And here are a few.
https://github.com/Mario-brows/Brows-Super-Mario https://github.com/lopatin96/Lua-SNES-GenNeurNetwork The main problem in them is they use BizHawk Emulator, which I was not successful in compiling for my debian OS, Its stable only for windows machines. Then I found its alternative fceux Which can handle lua scripts too!.
The following steps are what I used to compile it successfully.</description>
    </item>
    
  </channel>
</rss>
