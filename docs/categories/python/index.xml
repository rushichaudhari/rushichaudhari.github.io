<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python on A collection of random ideas so I don&#39;t have to google again</title>
    <link>https://rushichaudhari.github.io/categories/python/</link>
    <description>Recent content in python on A collection of random ideas so I don&#39;t have to google again</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 06 May 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://rushichaudhari.github.io/categories/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Why Do We Need an Opensource Face Detection APIs?</title>
      <link>https://rushichaudhari.github.io/posts/2022-05-06-why-do-we-need-an-opensource-face-detection-apis/</link>
      <pubDate>Fri, 06 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://rushichaudhari.github.io/posts/2022-05-06-why-do-we-need-an-opensource-face-detection-apis/</guid>
      <description>A comparison of different Face Detection APIs in the industry Why do we need an opensource face detection APIs ? Consider we have around 80,000 videos which consists of around a total of 72 million frames. Below is an analysis of how different competitor’s face detection APIs would cost for 72 million frames. Some people have a myth that opensource models don’t work that well compared to these premium services. I’ve also shared a few test screenshots on how even premium service give false positives.</description>
    </item>
    
    <item>
      <title>Convert Browser Requests to Python</title>
      <link>https://rushichaudhari.github.io/posts/2022-04-24-convert-browser-requests-to-python/</link>
      <pubDate>Sun, 24 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://rushichaudhari.github.io/posts/2022-04-24-convert-browser-requests-to-python/</guid>
      <description>Scraping dynamic content these days is bit difficult as there are wide variety of authentication mechanisms and web server needs correct headers, session, cookies to authenticate the request. If we need to quickly scrape content just for once, implementing authenticationis an overhead. Instead, we can manually login to the website, capture an authenticated request and use it for scraping other pages by changing url/form parameters.
curl &amp;#39;https://www.glassdoor.com/member/home/index.htm&amp;#39; -H &amp;#39;User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:99.</description>
    </item>
    
    <item>
      <title>Webscraping 1 minute stock data from tradingview</title>
      <link>https://rushichaudhari.github.io/posts/2020-06-28-trading-view-scraping/</link>
      <pubDate>Tue, 22 Dec 2020 01:21:27 +0000</pubDate>
      
      <guid>https://rushichaudhari.github.io/posts/2020-06-28-trading-view-scraping/</guid>
      <description>How I webscraped 1 minute stock data from tradingview After a long die-hard trying I managed to get 1 minute stock data for free. My previous tries were using selenium and beautifulsoup modules in python. But the data is highly obfuscated so I was not able to find the exact HTML element to scrape. If you manage to do this using selenium please comment below.
Probably the data is being loaded up as SVG which is why it isn&amp;rsquo;t being seen in html inspect element.</description>
    </item>
    
    <item>
      <title>LSTMS for stock price predictions, worth it ?</title>
      <link>https://rushichaudhari.github.io/posts/2020-07-03-lstm-stock-prediction-worth-it/</link>
      <pubDate>Fri, 03 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://rushichaudhari.github.io/posts/2020-07-03-lstm-stock-prediction-worth-it/</guid>
      <description>The internet is now flooded with “predicting stock market prices using LSTM”. I went through 9 articles that I found on websites like medium, KDnuggets, etc. And I realized almost 6-7 out of them showed promising results. But none of them showed their real-life use-case; the question is is it beneficial?
LSTMS predict T+1th term by previous k terms of time-series, say k=2, So we need to have T and T-1 to predict T+2 so suppose my X for input is Open, High, Low, Close, Volume, and Y would be the next day’s Close</description>
    </item>
    
    <item>
      <title>Automate Google forms without selenium</title>
      <link>https://rushichaudhari.github.io/posts/2020-07-02-automate-forms-without-selenium/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://rushichaudhari.github.io/posts/2020-07-02-automate-forms-without-selenium/</guid>
      <description>In the previous year, I had posted a script to fill google forms using selenium, and containerizing it with docker to run it parallelly. This is an alternative way to do the same using post requests.
I had created a google form using the default template shown below.
Which had fields like To get started we need to capture the request. I&amp;rsquo;ve used burp suite tool to capture, there are many alternative tools you can google.</description>
    </item>
    
  </channel>
</rss>
