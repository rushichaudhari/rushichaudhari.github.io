<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>A collection of random ideas so I don't have to google again</title>
    <description></description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Fri, 30 Oct 2020 01:00:16 -0400</pubDate>
    <lastBuildDate>Fri, 30 Oct 2020 01:00:16 -0400</lastBuildDate>
    <generator>Jekyll v3.8.5</generator>
    
      <item>
        <title>Setting up tigervncserver on arch linux (raspberry-pi)</title>
        <description>&lt;h2 id=&quot;installing-tigervnc&quot;&gt;Installing tigervnc&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;sudo pacman -Ss tigervnc
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;editing-the-environment-file&quot;&gt;Editing the environment file&lt;/h2&gt;
&lt;p&gt;~/.vnc/xstartup functions like .xinitrc  and it’s sourced by vncserver when being started. At a minimum, users should start a DE from this file. As an example, to start lxde, you’ll modify the file to:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;$nano ~/.vnc/xstartup

#!/bin/bash
exec lxde &amp;amp;&amp;gt;/dev/null
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;the-file-should-be-executable&quot;&gt;The file should be executable:&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;$ chmod +x ~/.vnc/xstartup
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;adding-vncserver-options&quot;&gt;Adding vncserver options&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;$ nano ~/.vnc/config

desktop=sandbox
geometry=1920x1080
dpi=96
SecurityTypes=none
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;starting-and-stopping-vncserver-via-systemd&quot;&gt;Starting and stopping vncserver via systemd&lt;/h2&gt;
&lt;p&gt;To control vncserver with systemd, first, create systemd unit file for the user&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;$ cat /etc/systemd/system/vncserver@:1.service

[Unit]
Description=Remote desktop service (VNC)
After=syslog.target network.target

[Service]
Type=simple
User=pi
PAMName=login
PIDFile=/home/%u/.vnc/%H%i.pid
ExecStartPre=/bin/sh -c '/usr/bin/vncserver -kill %i &amp;gt; /dev/null 2&amp;gt;&amp;amp;1 || :'
ExecStart=/usr/bin/vncserver %i -geometry 1440x900 -alwaysshared -fg
ExecStop=/usr/bin/vncserver -kill %i

[Install]
WantedBy=multi-user.target
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;where :1 is the $DISPLAY environment variable. Replace &lt;strong&gt;pi&lt;/strong&gt; with the desired username and &lt;strong&gt;1440x900&lt;/strong&gt; with the resolution you want to set.&lt;/p&gt;

&lt;p&gt;To start the service, run&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;$ sudo systemctl start vncserver@:1.service
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;on-tigervnc-client&quot;&gt;On tigervnc client&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/assets/2020-10-29-Setting-up-tigervncserver-on-arch-linux-(raspberry-pi)/tigervncclient.png&quot; alt=&quot;sadsad&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 29 Oct 2020 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/Setting-up-tigervncserver-on-arch-linux-(raspberry-pi)/</link>
        <guid isPermaLink="true">http://localhost:4000/Setting-up-tigervncserver-on-arch-linux-(raspberry-pi)/</guid>
        
        
      </item>
    
      <item>
        <title>Running GUI apps from docker inside WSL2.0 as standalone application</title>
        <description>&lt;p&gt;##&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-size:50px;&quot;&gt;A&lt;/span&gt;nother day, again my anaconda crashed for no reason. I decided to never use python on windows without linux vm/ docker.&lt;/p&gt;

&lt;p&gt;I already had my own docker image created here https://hub.docker.com/repository/docker/rushichaudhari/zipline1.3.0/&lt;/p&gt;

&lt;p&gt;but I wondered If I could use GUI in it, luckily I managed to do so.&lt;/p&gt;

&lt;p&gt;So here are the steps :-&lt;/p&gt;

&lt;p&gt;Pre-requirements:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Windows 10&lt;/li&gt;
  &lt;li&gt;WSL&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For now, it is necessary to install a third-party App to run the GUI Apps, but Microsoft announced on &lt;strong&gt;//build 2020&lt;/strong&gt; that they will release soon an improvement that will not require any  third-party component to run Linux GUI Apps on Windows Desktop.&lt;/p&gt;

&lt;h3 id=&quot;installing-the-x-server&quot;&gt;Installing the X Server&lt;/h3&gt;

&lt;p&gt;The X server is a provider of graphics resources and keyboard/mouse events. I am using the &lt;strong&gt;VcXsrv Windows X Server&lt;/strong&gt; that is open-source and is frequently update.&lt;/p&gt;

&lt;p&gt;The first step is to install the third-part display manager called &lt;strong&gt;VcXsrv Windows X Server&lt;/strong&gt; available at:&lt;/p&gt;

&lt;p&gt;https://sourceforge.net/projects/vcxsrv/&lt;/p&gt;

&lt;p&gt;After installing launch the &lt;strong&gt;xlaunch.exe&lt;/strong&gt;, make sure disable access control is clicked to avoid permission error&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../img/2020-08-19-DockerGUIwsl/disableaccesscontrol.jpg&quot; alt=&quot;https://techcommunity.microsoft.com/t5/image/serverpage/image-id/201596iBCB2B8DA889830E0/image-size/large?v=1.0&amp;amp;px=999&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Also allow VcxSrv in the firewall&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../img/2020-08-19-DockerGUIwsl/firewall.jpg&quot; alt=&quot;firewall.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Select multiple windows under display settings popup&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../img/2020-08-19-DockerGUIwsl/image-20200819104058629.png&quot; alt=&quot;image-20200819104058629&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And start with no client.&lt;/p&gt;

&lt;h2 id=&quot;installing-archlinux-on-wsl&quot;&gt;Installing Archlinux on WSL&lt;/h2&gt;

&lt;p&gt;I’ve used https://github.com/yuk7/ArchWSL/ for linux on WSL because arch is completely bloat free so I could install only what I need and save my space. Its installation is easy, just double-click the Arch.exe and it will be set up. For more details refer here&lt;/p&gt;

&lt;p&gt;https://github.com/yuk7/ArchWSL/wiki/How-to-Setup&lt;/p&gt;

&lt;p&gt;After getting Arch shell, Install docker&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo pacman -Syu docker&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;start docker daemon&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo dockerd &amp;amp;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The docker image I used was https://hub.docker.com/repository/docker/rushichaudhari/zipline1.3.0  which I had built to run zipline without much hassle. I will be pulling the same here. It is pretty heavy 3-4GB, you can use any light image for base os to pull from &lt;a href=&quot;&quot;&gt;hub.docker.com&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;docker pull rushichaudhari/zipline1.3.0:firstpush&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The next step is to set the &lt;strong&gt;DISPLAY&lt;/strong&gt; environment  variable on Linux to use the Windows host’s IP address as WSL2 and the  Windows host are not in the same network device. It is necessary to run  the following bash command to load the correct IP address on launch:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Inside WSL linux shell&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;export DISPLAY=&quot;`grep nameserver /etc/resolv.conf | sed 's/nameserver //'`:0&quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Running the following command, it is possible to see that the $DISPLAY environment variable now has the Windows Host’s IP set:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;echo $DISPLAY&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;starting-the-docker&quot;&gt;Starting the docker&lt;/h3&gt;

&lt;p&gt;Get the docker Image Id&lt;/p&gt;

&lt;p&gt;```sudo docker images``&lt;/p&gt;

&lt;p&gt;​           &lt;img src=&quot;../img/2020-08-19-DockerGUIwsl/1.png&quot; alt=&quot;file://c:\users\h4x3d\appdata\local\temp\tmpzkddyn\1.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Run a new docker container using&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo docker run -it  86086b792ad1  /bin/bash&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now the current shell would be a archlinux shell which is inside a docker which is inside an archlinux wsl.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Map the DISPLAY again like we did before so docker would point to WSL2’s ip address which in turn points to Windows hosts ip address.&lt;/strong&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Inside docker linux shell&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;export DISPLAY=&quot;`grep nameserver /etc/resolv.conf | sed 's/nameserver //'`:0&quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;echo $DISPLAY&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;installing-some-test-applications&quot;&gt;Installing some test applications&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;pacman -S chromium gedit python python3-pip neofetch
pacman -S qt5-base libxcb #libraries needed for spyder
pip3 install spyder
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Some applications like chromium doesn’t work on root user create a temp user if needed, switch to this user before running that application.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;useradd -m -G wheel -s /bin/bash testuser
passwd testuser
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Make sure that &lt;strong&gt;XLaunch&lt;/strong&gt; is running on windows host before starting any app.&lt;/p&gt;

&lt;p&gt;Lets start gedit&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;gedit
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;../img/2020-08-19-DockerGUIwsl/image-20200819110253538.png&quot; alt=&quot;image-20200819110253538&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;chromium --no-sandbox
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;../img/2020-08-19-DockerGUIwsl/image-20200819110323238.png&quot; alt=&quot;image-20200819110323238&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;spyder3&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../img/2020-08-19-DockerGUIwsl/image-20200819110354785.png&quot; alt=&quot;image-20200819110354785&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;these-all-apps-are-not-inside-host-windows-neither-inside-wsl&quot;&gt;These all apps are not inside host windows neither inside WSL!!&lt;/h4&gt;

&lt;p&gt;Enjoy :)&lt;/p&gt;

</description>
        <pubDate>Wed, 19 Aug 2020 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/DockerGUIwsl/</link>
        <guid isPermaLink="true">http://localhost:4000/DockerGUIwsl/</guid>
        
        
        <category>vpn</category>
        
        <category>digitalocean</category>
        
      </item>
    
      <item>
        <title>Automate Google forms without selenium</title>
        <description>&lt;h1 id=&quot;lstms-for-stock-price-predictions-worth-it-&quot;&gt;LSTMS for stock price predictions, worth it ?&lt;/h1&gt;

&lt;p&gt;&lt;span style=&quot;font-size:50px;&quot;&gt;T&lt;/span&gt;he internet is now flooded with “predicting stock market prices using LSTM”. I went through 9 articles which I found on websites like medium, KDnuggets, etc.
And I realized almost 6-7 out of them showed good results. But none of them showed their real-life use-case, The question is really helpful?&lt;/p&gt;

&lt;p&gt;LSTMS predict T+1th term by previous k terms of time-series 
say k=2
So we need to have T and T-1 to predict T+2&lt;/p&gt;

&lt;p&gt;so suppose my X for input is Open, High, Low, Close, Volume
and Y would be next day’s Close&lt;/p&gt;

&lt;p&gt;I need to have OHLCV values of the previous 2 days to predict the next day’s Close.
This means If I need to know tomorrow’s close, I need to wait till the current day ends to get its OHLCV values i.e. it predicts only 1 candlestick in the future.&lt;/p&gt;

&lt;p&gt;One article was like using previous k days Close to predict next days Close. 
so for T+1, I would give it T’s and (T-1)’s Close as inputs and 
for T+2; T’s, and (predicted_T+1)’s close as input. 
This is again not useful because if there is an error in T+1; it gets propagated in the next sequence, and also logically we cannot predict movements based on only closing prices. OHLCV may work because it might detect few candlestick patterns like Doji, Harami, etc, and also consider volume.&lt;/p&gt;

&lt;p&gt;LSTM’s in those articles showed good predictions, because they predict only single value instead of a range of values. So are they worth for a single candlestick? Because even indicators like moving averages give a proper estimate for single candlestick.&lt;/p&gt;

&lt;p&gt;I think there should be a different approach to use LSTMS, for which unfortunately I didn’t find any article. Please comment down below if you find something.&lt;/p&gt;

&lt;p&gt;I am not an expert in these fields — I am just putting forward the conclusions I got to after my explorations with this topic, 
so feel free to point out anything I missed. Thank you for your time.&lt;/p&gt;
</description>
        <pubDate>Fri, 03 Jul 2020 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/LSTM-Stock-Prediction-worth-it/</link>
        <guid isPermaLink="true">http://localhost:4000/LSTM-Stock-Prediction-worth-it/</guid>
        
        
        <category>python</category>
        
        <category>requests</category>
        
        <category>selenium</category>
        
        <category>google</category>
        
        <category>form</category>
        
      </item>
    
      <item>
        <title>Automate Google forms without selenium</title>
        <description>&lt;p&gt;&lt;img src=&quot;..\img\2020-07-02-Automate-Forms-Without-Selenium\46zcd9.jpg&quot; alt=&quot;46zcd9&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;span style=&quot;font-size:30px;&quot;&gt;I&lt;/span&gt;n the previous year, I had posted a script to fill google forms using selenium, and containerizing it with docker to run it parallelly. This is an alternative way to do the same using post requests.&lt;/p&gt;

&lt;p&gt;I had created a google form using the default template shown below.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;..\img\2020-07-02-Automate-Forms-Without-Selenium\image-20200702100957610.png&quot; alt=&quot;image-20200702100957610&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;which-had-fields-like&quot;&gt;Which had fields like&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;..\img\2020-07-02-Automate-Forms-Without-Selenium\image-20200702101526822.png&quot; alt=&quot;image-20200702101526822&quot; /&gt;&lt;/p&gt;

&lt;p&gt;To get started we need to capture the request. I’ve used &lt;strong&gt;burp suite&lt;/strong&gt; tool to capture, there are many alternative tools you can google.&lt;/p&gt;

&lt;h2 id=&quot;capturing-requests&quot;&gt;Capturing Requests&lt;/h2&gt;

&lt;h4 id=&quot;setting-up-burp&quot;&gt;Setting up burp&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Create a localhost proxy in burp&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;..\img\2020-07-02-Automate-Forms-Without-Selenium\image-20200702102944153.png&quot; alt=&quot;image-20200702102944153&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Then in the browser settings, put the proxy as localhost&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;..\img\2020-07-02-Automate-Forms-Without-Selenium\2.PNG&quot; alt=&quot;2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;..\img\2020-07-02-Automate-Forms-Without-Selenium\3.PNG&quot; alt=&quot;3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;You may refer this on how to capture request using burp&lt;/strong&gt;&lt;/p&gt;

&lt;iframe width=&quot;917&quot; height=&quot;516&quot; src=&quot;https://www.youtube.com/embed/gZtuqbEE6aY&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;h2 id=&quot;the-code&quot;&gt;The CODE&lt;/h2&gt;

&lt;p&gt;For the URL to send request, replace the ‘/viewform’ from the original URL when you open the form manually in browser with ‘/formResponse’,  In my case&lt;/p&gt;

&lt;p&gt;```{r, engine=’python’, count_lines}
URL = “https://docs.google.com/forms/d/e/1FAIpQLSc11NqG6fWqNn327qdb479z6QTrmC7QEwbvH7sB-CQ59iA_ZQ/formResponse”&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;
Copy the raw_headers which you get from burpsuite

```python
raw_headers='''
Host: docs.google.com
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:77.0) Gecko/20100101 Firefox/77.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
Referer: https://docs.google.com/forms/d/e/1FAIpQLSc11NqG6fWqNn327qdb479z6QTrmC7QEwbvH7sB-CQ59iA_ZQ/viewform?fbzx=5050709467963863140
Content-Type: application/x-www-form-urlencoded
Content-Length: 365
Origin: https://docs.google.com
Connection: close
Cookie: S=spreadsheet_forms=ptyYIUGTE-Wce1eMmds7LWc60bZe_XGHOQKjxWnzIHk; NID=204=0wAwj_KBdtmVpuWOQvMGbyhQS7w9LewGgXAnULqYY-ElcRmhGC1_LeJHUB__Fl7nRmGA89EjUK_6PDO4ihZ0fbL0mohFj5zYKpwCZ3j-DoGFtMo2gzQ0Ck9XabjFSDOGgYvjQXFVE6YuhD9SzX9XKub9zsG7o6KPKNThIYz0f5I; ANID=AHWqTUm_MzyyXf3yDhw_L2TZ3Gx9IL62BowaziQCT57iFP7NiOWn86NfU5A3FRyo
Upgrade-Insecure-Requests: 1
'''
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Cleaning and converting of the raw_headers into a dictionary&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;headrs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;dict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;partition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;':'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;partition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;':'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;strip&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;raw_headers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)])&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;#removing cookie and blank keys
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;del&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;headrs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Cookie'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;del&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;headrs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Similarly raw_data is data sent as shown in burpsuite, copy that into raw_data&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-Python&quot;&gt;raw_data='entry.2092238618=test1&amp;amp;entry.1556369182=test1%40gmail.com&amp;amp;entry.479301265=asdasd&amp;amp;entry.1753222212=Day+1&amp;amp;entry.1753222212=Day+3&amp;amp;entry.588393791=Vegetarian&amp;amp;entry.2109138769=Yes&amp;amp;entry.1753222212_sentinel=&amp;amp;entry.588393791_sentinel=&amp;amp;entry.2109138769_sentinel=&amp;amp;fvv=1&amp;amp;draftResponse=%5Bnull%2Cnull%2C%225050709467963863140%22%5D%0D%0A&amp;amp;pageHistory=0&amp;amp;fbzx=5050709467963863140'

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The raw_data is &lt;a href=&quot;https://www.w3schools.com/tags/ref_urlencode.ASP&quot;&gt;url-encoded&lt;/a&gt;, we need to url-decode it first&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-Python&quot;&gt;raw_data= urllib.parse.unquote(raw_data)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Cleaning and fetching the keys of raw_data&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;raw_data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;raw_data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&amp;amp;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;raw_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'='&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'='&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Next we generate a custom dictionary with the keys fetched and their respective values as custom values&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:- **For multiple values like checkboxes we can also pass as a list like **‘entry.1753222212’: [‘Day 1’, ‘Day 3’]&lt;/strong&gt; here.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;&quot;entry.2092238618&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;johnwick&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;'entry.1556369182'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'johnw@gmail.com'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;'entry.479301265'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'dheknyasorg'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;'entry.1753222212'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Day 1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Day 3'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;'entry.588393791'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Vegan'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;'entry.2109138769'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Yes'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now everything is ready, we only need to send a post request with our parameters.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-Python&quot;&gt;# sending post request and saving response as response object 
r = requests.post(url = URL, data = data, headers=headrs) 

# status 200=success 
resp = r.status_code 
print(&quot;The ResponseL is:%s&quot;%resp) 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A response would get recorded in the google form if status_code is 200.&lt;/p&gt;

&lt;p&gt;Full code here &lt;a href=&quot;https://github.com/rushic24/Automating-Forms-Google-Forms/tree/master/Method2-%20Post%20Requests&quot;&gt;https://github.com/rushic24/Automating-Forms-Google-Forms/tree/master/Method2-%20Post%20Requests&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 02 Jul 2020 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/Automate-Forms-Without-Selenium/</link>
        <guid isPermaLink="true">http://localhost:4000/Automate-Forms-Without-Selenium/</guid>
        
        
        <category>python</category>
        
        <category>requests</category>
        
        <category>selenium</category>
        
        <category>google</category>
        
        <category>form</category>
        
      </item>
    
      <item>
        <title>Webscraping 1 minute stock data from tradingview</title>
        <description>&lt;h1 id=&quot;how-i-webscraped-1-minute-stock-data-from-tradingview&quot;&gt;How I webscraped 1 minute stock data from tradingview&lt;/h1&gt;

&lt;p&gt;After a long die-hard trying I managed to get 1 minute stock data for free. My previous tries were using selenium and beautifulsoup modules in python. But the data is highly obfuscated  so I was not able to find the exact HTML element to scrape. If you manage to do this using selenium please comment below.&lt;/p&gt;

&lt;p&gt;Probably the data is being loaded up as SVG which is why it isn’t being seen in html inspect element.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;C:\Users\h4x3d\Documents\rushichaudhari.github.io\img\2020-06-28-Trading-View-Scraping\image-20200702112353396.png&quot; alt=&quot;image-20200702112353396&quot; /&gt;&lt;/p&gt;

&lt;p&gt;But…&lt;/p&gt;

&lt;p&gt;After a look into Network section I found something interesting.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;C:\Users\h4x3d\Documents\rushichaudhari.github.io\img\2020-06-28-Trading-View-Scraping\image-20200702112605039.png&quot; alt=&quot;image-20200702112605039&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;websockets !!!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;After observing the Headers&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;C:\Users\h4x3d\Documents\rushichaudhari.github.io\img\2020-06-28-Trading-View-Scraping\image-20200702112714421.png&quot; alt=&quot;image-20200702112714421&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And Messages&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;C:\Users\h4x3d\Documents\rushichaudhari.github.io\img\2020-06-28-Trading-View-Scraping\image-20200702112933310.png&quot; alt=&quot;image-20200702112933310&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I tried to send the same messages using websockets in python and it worked &lt;strong&gt;:)&lt;/strong&gt; .&lt;/p&gt;

&lt;p&gt;Code at &lt;a href=&quot;https://github.com/rushic24/tradingview-scraper&quot;&gt;https://github.com/rushic24/tradingview-scraper&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;limitations&quot;&gt;Limitations&lt;/h2&gt;

&lt;p&gt;We can only get previous 5000 ticks of data.&lt;/p&gt;
</description>
        <pubDate>Sun, 28 Jun 2020 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/Trading-View-Scraping/</link>
        <guid isPermaLink="true">http://localhost:4000/Trading-View-Scraping/</guid>
        
        
        <category>python</category>
        
        <category>requests</category>
        
        <category>selenium</category>
        
        <category>google</category>
        
        <category>form</category>
        
      </item>
    
      <item>
        <title>A prebuilt kali-linux with GUI aka vnc in docker in 2 seconds</title>
        <description>&lt;h3 id=&quot;this-guide-assumes-you-already-know-what-is-docker-and-docker-vncviewer-installed-on-your-system&quot;&gt;This guide assumes you already know what is docker and docker, vncviewer installed on your system&lt;/h3&gt;

&lt;p&gt;The docker image given at &lt;a href=&quot;https://hub.docker.com/search?q=&amp;amp;type=image&quot;&gt;https://hub.docker.com/search?q=&amp;amp;type=image&lt;/a&gt; is a blank kali image with 0 tools.&lt;/p&gt;

&lt;p&gt;Let us create a light-weight custom image with the tools needed. The following are the tools which I think are commonly used in kali you can add/remove a few from that list.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;aircrack-ng
crackmapexec
crunch
curl
dirb
dirbuster
dnsenum
dnsrecon
dnsutils
dos2unix
enum4linux
exploitdb
ftp
git
gobuster
hashcat
hping3
hydra
impacket-scripts
john
joomscan
masscan
metasploit-framework
mimikatz
nasm
ncat
netcat-traditional
nikto
nmap
patator
php
powersploit
proxychains
python-pip
python2
python3
recon-ng
responder
samba
samdump2
smbclient
smbmap
snmp
socat
sqlmap
sslscan
theharvester
vim
wafw00f
weevely
wfuzz
whois
wordlists
wpscan
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Creating &lt;b&gt;Dockerfile&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;The default password set for the VNC is 1234&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;# Dockerfile kali-light

# Official base image
FROM kalilinux/kali-rolling

# Apt
RUN apt -y update &amp;amp;&amp;amp; apt -y upgrade &amp;amp;&amp;amp; apt -y autoremove &amp;amp;&amp;amp; apt clean

# Tools
RUN apt install aircrack-ng crackmapexec crunch curl dirb dirbuster dnsenum dnsrecon dnsutils dos2unix enum4linux exploitdb ftp git gobuster hashcat hping3 hydra impacket-scripts john joomscan masscan metasploit-framework mimikatz nasm ncat netcat-traditional nikto nmap patator php powersploit proxychains python-pip python2 python3 recon-ng responder samba samdump2 smbclient smbmap snmp socat sqlmap sslscan theharvester vim wafw00f weevely wfuzz whois wordlists wpscan -y --no-install-recommends

# DE and vncserver
RUN DEBIAN_FRONTEND=noninteractive apt install -y xfce4 xfce4-goodies x11vnc xvfb 
RUN mkdir ~/.vnc
RUN x11vnc -storepasswd 1234 ~/.vnc/passwd
COPY entrypoint.sh /entrypoint.sh
ENTRYPOINT [&quot;/entrypoint.sh&quot;]

# Alias
RUN echo &quot;alias l='ls -al'&quot; &amp;gt;&amp;gt; /root/.bashrc
RUN echo &quot;alias nse='ls /usr/share/nmap/scripts | grep '&quot; &amp;gt;&amp;gt; /root/.bashrc
RUN echo &quot;alias scan-range='nmap -T5 -n -sn'&quot; &amp;gt;&amp;gt; /root/.bashrc
RUN echo &quot;alias http-server='python3 -m http.server 8080'&quot; &amp;gt;&amp;gt; /root/.bashrc
RUN echo &quot;alias php-server='php -S 127.0.0.1:8080 -t .'&quot; &amp;gt;&amp;gt; /root/.bashrc
RUN echo &quot;alias ftp-server='python -m pyftpdlib -u \&quot;admin\&quot; -P \&quot;S3cur3d_Ftp_3rv3r\&quot; -p 2121'&quot; &amp;gt;&amp;gt; /root/.bashrc

# Set working directory to /root
WORKDIR /root

&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;build-your-new-image&quot;&gt;Build your new Image&lt;/h2&gt;

&lt;p&gt;You can now create the image with command :&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;docker build -t mykali-light .&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&quot;creating-the-host-data-volume&quot;&gt;Creating the Host Data Volume&lt;/h2&gt;

&lt;p&gt;We need to create a shared directory to share data in the container. So whatever we paste inside ~/container-data will be available inside /root/data inside docker container.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;mkdir ~/container-data
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;running-docker-container&quot;&gt;Running docker container&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;docker run -p 5900:5900 --rm -i -t -v ~/container-data:/root/data/ mykali-light 
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;connect-with-vnc-on-the-host-machine&quot;&gt;Connect with VNC on the host machine&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;../img/2020-05-14-Docker-VNC/image-20200514151415924.png&quot; alt=&quot;image-20200514151415924&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../img/2020-05-14-Docker-VNC/image-20200514151439585.png&quot; alt=&quot;image-20200514151439585&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;inside-the-white-console-start-xfce4-session&quot;&gt;Inside the white console start xfce4 session&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;startxfce4
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;../img/2020-05-14-Docker-VNC/image-20200514145259098.png&quot; alt=&quot;image-20200514145259098&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../img/2020-05-14-Docker-VNC/image-20200514151538620.png&quot; alt=&quot;image-20200514151538620&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 14 May 2020 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/Docker-VNC/</link>
        <guid isPermaLink="true">http://localhost:4000/Docker-VNC/</guid>
        
        
        <category>kali</category>
        
        <category>docker</category>
        
        <category>linux</category>
        
        <category>VNC</category>
        
      </item>
    
      <item>
        <title>SSD - things todo to save space on ssd C drive</title>
        <description>&lt;h2 id=&quot;change-cache-location-of-firefox&quot;&gt;Change cache location of Firefox&lt;/h2&gt;

&lt;p&gt;You can do this by creating a new hidden preference.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Type &lt;strong&gt;about:config&lt;/strong&gt; into the location bar and press enter&lt;/li&gt;
  &lt;li&gt;Accept the warning message that appears, you will be taken to a list of preferences&lt;/li&gt;
  &lt;li&gt;Right-click somewhere in the list and select “New &amp;gt; String”&lt;/li&gt;
  &lt;li&gt;For the name of the preference type &lt;strong&gt;browser.cache.disk.parent_directory&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;For its value type the path to where you want to store the cache&lt;/li&gt;
  &lt;li&gt;Next locate the preference &lt;strong&gt;browser.cache.disk.enable&lt;/strong&gt;, it must be set to &lt;strong&gt;true&lt;/strong&gt;, if it is not, double-click on it to change its value&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;symlink-appdata-folders&quot;&gt;Symlink AppData folders&lt;/h2&gt;

&lt;p&gt;Windows applications often store their data and settings in an AppData folder, and each Windows user account has its own. It is located under C:\Users&amp;lt;username&amp;gt; which stores caches of various applications.&lt;/p&gt;

&lt;p&gt;Move all the files/hidden files/sub folders from the &lt;code class=&quot;highlighter-rouge&quot;&gt;C:\Users\Nikhil\AppData\Local&lt;/code&gt; to to your &lt;code class=&quot;highlighter-rouge&quot;&gt;D:\AppData\Local&lt;/code&gt; directory and create a symlink.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;mklink /d C:\Users\Nikhil\AppData\Local D:\AppData\Local
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;move-ms-office-to-some-other-drive-or-install&quot;&gt;Move MS Office to some other drive [or install]&lt;/h2&gt;

&lt;p&gt;source: &lt;a href=&quot;https://www.youtube.com/watch?v=CIBNlTpByoY&amp;amp;t=36s&quot;&gt;https://www.youtube.com/watch?v=CIBNlTpByoY&amp;amp;t=36s&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For 64bit&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;MKLINK /J &quot;C:\Program Files\Microsoft Office\root&quot; &quot;U:\Program Files\Microsoft Office\root&quot;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;For 32 bit [x86]&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;MKLINK /J &quot;C:\Program Files (x86)\Microsoft Office\root&quot; &quot;U:\Program Files (x86)\Microsoft Office\root&quot;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
        <pubDate>Fri, 10 Apr 2020 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/SSD-savespace/</link>
        <guid isPermaLink="true">http://localhost:4000/SSD-savespace/</guid>
        
        
        <category>ssd</category>
        
        <category>drive</category>
        
        <category>space</category>
        
        <category>firefox</category>
        
        <category>appdata</category>
        
        <category>temp</category>
        
        <category>symlink</category>
        
      </item>
    
      <item>
        <title>RTL SDR notes</title>
        <description>&lt;h2 id=&quot;we-need&quot;&gt;We Need&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;RTL SDR Dongle&lt;/li&gt;
  &lt;li&gt;RTL SDR Software&lt;/li&gt;
  &lt;li&gt;Computer
```
SDR works by receiving a analogue radio signal and then using an analog to digital converter to  digitalise the signal. The digitalised signal can then be worked in digital processing software.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;We need
GQRX  -&amp;gt; osx/ linux&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;git clone https://github.com/csete/gqrx.git
cd gqrx
mkdir build
cd build
qmake ..
make
make install 
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;sudo apt-get update
sudo apt install git cmake libusb-1.0-0.dev build-essential
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;rtl2832u--osmocom-driver&quot;&gt;Rtl2832u- osmocom driver&lt;/h3&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;git clone https://github.com/osmocom/rtl-sdr
cd rtl-sdr
mkdir build cd build cmake ..
make
make install
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;examples-of-rtl_fm-used&quot;&gt;Examples of rtl_fm used&lt;/h2&gt;
&lt;p&gt;RTL_FM needs to be piped into an auto player that can play raw_audio such as sox or aplay&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;sudo apt install sox
rtl_fm -M wbfm -f 91.10M | play -r 32000 -t raw -e s -b 16 -c 1 -V1
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;calibrating-rtl-sdr&quot;&gt;Calibrating RTL-SDR&lt;/h2&gt;

&lt;p&gt;rtl-sdr is mass chinese manufactured device with poor crystal tolerance.
crystal oscillator in rtl-sdr is its clock source (heartbeat of the circuit)&lt;/p&gt;

&lt;p&gt;rtl-sdr uses 28.8 Mhz oscillator which may be out by a few khz. So few frequencies may not be where you expect them to be.&lt;/p&gt;

&lt;p&gt;To calibrate it we can tune it to a known frequency and adjust the PPM Offset until signal is centered after dongle is running for a while.&lt;/p&gt;

&lt;p&gt;Kalibrate &lt;a href=&quot;https://github.com/steve-m/kalibrate-rtl&quot;&gt;https://github.com/steve-m/kalibrate-rtl&lt;/a&gt;
&lt;a href=&quot;https://github.com/steve-m/kalibrate-rtl/wiki/How-to-install&quot;&gt;https://github.com/steve-m/kalibrate-rtl/wiki/How-to-install&lt;/a&gt;
kalibrate is a linux tool to auto calibrate. It requires that there are local GSM Signals receivable by the antenna to do the calibration.&lt;/p&gt;

&lt;p&gt;GSM signals are used because they transmit frequency correction data which calibrate can use to determine the clock offset.
Let us scan for gsm 900 bands with 50db gain&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;kal -s GSM900 -g 50 #using this you will get the offset range
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;GENERAL FREQUENCIES&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Mhz&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Amateur Radio&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0.535-1605&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Shortwave Radio&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;3-30&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;walkie talkie&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;40-49&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;CV Radio&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;26.965-27.405&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Analog TV&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;55-88&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Radio Controlled Toys&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;72-76&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Brodcast FM&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;88-108&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Air Traffic Control&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;108-136&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;ATIS&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;110-129&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Acars&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;131.550&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;VDL2&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;136.975&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;NOA&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;136-138 MHZ&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;VHF Amateur Radio (Band for HAM Radio)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;144-148&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Noa Weaather(Voice weather report)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;162.4&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Rail&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;159-162&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Maritime&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;156-162&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;AIS (Track ships like radar)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;161.9175 &amp;amp; 162.025&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Pagers&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;157&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Analogue TV&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;174-216&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;DAB&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;174-239&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Trunking radio (commercial walkie talkie)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;~400&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;ISM Band&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;~433&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;GSM&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;850, 900, 1800, 1900&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;ADS-B used to track aircraft like radar&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1090&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;GPS&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1575&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;acars&quot;&gt;ACARS&lt;/h2&gt;
&lt;p&gt;In aviation, ACARS is a digital communication system for transmission of short messages between aircraft and ground stations. Messages you may hear on ACARS are oooi events. (out of the gate, off the ground, on the ground, and into the gate)&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Popular ACARS frequencies&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Mhz&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;131.550&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Primary Channel worldwide&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;129.125&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Additional channel for USA &amp;amp; Canada&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;130.025&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Secondary channel for USA and Canada&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;130.425&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Additional channel for USA&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;130.450&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Additional channel for USA &amp;amp; Canada&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;131.125&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Additional channel for USA&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;131.450&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Primary channel for Japan&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;131.475&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Air Canada company channel&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;131.525&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;European secondary&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;131.725&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Primary channel in Europe&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;136.700&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Additional channel for USA&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;136.750&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Additional channel for USA&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;136.800&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Additional channel for USA&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;136.900&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;European secondary&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;136.850&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;SITA North American Frequency&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;136.750&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;New European frequency&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;131.850&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;New European frequency&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
</description>
        <pubDate>Thu, 09 Apr 2020 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/RTL-SDR-Notes-copy/</link>
        <guid isPermaLink="true">http://localhost:4000/RTL-SDR-Notes-copy/</guid>
        
        
        <category>rtl-sdr</category>
        
        <category>hackrf</category>
        
      </item>
    
      <item>
        <title>Not authorized to perform this operation</title>
        <description>&lt;p&gt;Sometimes, when using i3wm I get this error when mounting a partition. But it works for other des like gnome/cinnamon.&lt;/p&gt;

&lt;p&gt;Make sure polkit is installed.&lt;/p&gt;

&lt;p&gt;Loosen the polkit permissions in your system to allow your normal user to mount devices by creating a file at /etc/polkit-1/localauthority/50-local.d/org.freedesktop.automount.plka (as root!) with the following content:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;[Allow Unauthorized mounting/Unmounting]
Identity=unix-group:plugdev;cdrom
Action=org.freedesktop.udisks2.filesystem-*;org.freedesktop.udisks2.eject*
ResultAny=yes
ResultInactive=yes
ResultActive=yes
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You can loosen the polkit permissions in your system to allow your normal user to mount devices by creating a file at /etc/polkit-1/localauthority/50-local.d/org.freedesktop.automount.plka (as root!) with the following content:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;groups
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If “plugdev” is not listed, then use:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;# gpasswd -a USER plugdev
newgrp plugdev
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;http://forums.debian.net/viewtopic.php?f=10&amp;amp;t=126872&amp;amp;start=30#&quot;&gt;http://forums.debian.net/viewtopic.php?f=10&amp;amp;t=126872&amp;amp;start=30#&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 08 Apr 2020 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/Not-authorized-to-perform-this-operation/</link>
        <guid isPermaLink="true">http://localhost:4000/Not-authorized-to-perform-this-operation/</guid>
        
        
        <category>i3wm</category>
        
        <category>thunar</category>
        
        <category>pcmanfm</category>
        
        <category>debian</category>
        
      </item>
    
      <item>
        <title>Imp links for few scripts or codes</title>
        <description>&lt;h3 id=&quot;create-openvpn-tested-on-debianubuntu-on-cloud&quot;&gt;Create openvpn tested on debian/ubuntu on cloud&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/Nyr/openvpn-install&quot;&gt;https://github.com/Nyr/openvpn-install&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 08 Apr 2020 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/Imp-links/</link>
        <guid isPermaLink="true">http://localhost:4000/Imp-links/</guid>
        
        
        <category>vpn</category>
        
        <category>digitalocean</category>
        
      </item>
    
  </channel>
</rss>
